version: 2.1
jobs:
  build:
    docker:
      - image: fr3akyphantom/ttk_base:latest
        auth:
          username: "$DOCKER_USERNAME"
          password: "$DOCKERHUB_TOKEN"
      - image: circleci/postgres:alpine
        auth:
          username: "$DOCKER_USERNAME"
          password: "$DOCKERHUB_TOKEN"
        environment:
          POSTGRES_PASSWORD: postgres
    environment:
      PORT: 8080
    #working_directory: /torapp
    steps:
      - run:
          name: Git Auth
          command: |
            export GitHubMail GitHubName GITHUB_TOKEN
            git config --global user.email "$GitHubMail"
            git config --global user.name "$GitHubName"
            git config --global credential.helper store
            git config --global color.ui true
            git clone -q "https://$GITHUB_TOKEN@github.com/$GitHubName/google-git-cookies.git" &> /dev/null
            if [ -e google-git-cookies ]; then
              bash google-git-cookies/setup_cookies.sh
              rm -rf google-git-cookies
            fi
      - run:
          name: Add App
          no_output_timeout: 4.6h
          command: |
            export DEBIAN_FRONTEND=noninteractive
            apt-get update -qqy
            apt-get install -qqy xterm screen file nginx
            mkdir -p /torapp && chmod -R 777 /torapp
            git clone https://github.com/yash-dk/TorToolkit-Telegram -b master /torapp
            cd /torapp && mkdir -p /torapp/{sa,tortk/files}
            git clone https://${GITHUB_TOKEN}@github.com/rokibhasansagar/RcloneSA4Phantom --depth 1
            mv RcloneSA4Phantom/accounts/* sa/ && rm -rf RcloneSA4Phantom
            ls sa/ > sa_list
            echo -e "\nlaunchpadlib" >> requirements.txt
            pip3 install --no-cache-dir -r requirements.txt
            curl -sL "${EXEC_VAR_FILE}" > tortoolkit/consts/ExecVarsSample.py
            curl -fsSL https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip -o ngrok.zip
            unzip -q ngrok.zip ngrok && rm ngrok.zip
            chmod +x ngrok && mv ngrok /usr/local/bin/
            ngrok --version
            screen -dmS ngproxy ngrok http ${PORT} --log /tmp/ngrok.log --authtoken "${NGTTK_TOKEN}" --region us
            sleep 5s
            chmod 777 alive.sh start.sh
            export ServerAddr=$(grep "url=https" /tmp/ngrok.log | awk -F' url=' '{print $NF}')
            echo -e "\nServer Address is ${ServerAddr}\n\n"
            sed -i 's|__SERVER__ADDRESS__|'"$ServerAddr"'|' tortoolkit/consts/ExecVarsSample.py
            sed -i 's|~/.config/rclone|/root/.config/rclone|' tortoolkit/consts/ExecVarsSample.py
            mkdir -p ~/.config/rclone && curl -sL "${RCLONE_CONFIG_TTK}" > ~/.config/rclone/rclone.conf
            _randomSA() {
            while true; do
              sed -i 's|__ServiceAcc__|'"$(shuf -n 1 sa_list)"'|' ~/.config/rclone/rclone.conf
              sleep 30m
            done
            }
            _randomSA & disown
            sleep 2s
            ./start.sh

workflows:
  version: 2
  workstation:
    jobs:
      - build:
          context: org-global
